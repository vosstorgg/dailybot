#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import os
import subprocess
import sys

def create_initial_migration():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏"""
    try:
        # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –µ—Å—Ç—å DATABASE_URL –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–π (–º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–µ—Å—Ç–æ–≤–∞—è)
        if not os.getenv('DATABASE_URL'):
            print("‚ö†Ô∏è  DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—É—é DATABASE_URL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π:")
            print("export DATABASE_URL='postgresql://user:password@localhost/test_db'")
            return False
        
        print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏...")
        
        # –°–æ–∑–¥–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
        result = subprocess.run([
            sys.executable, '-m', 'alembic', 'revision', '--autogenerate',
            '-m', 'Initial tables: users, forecasts, astronomical_cache, activities'
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(result.stdout)
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏:")
            print(result.stderr)
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def apply_migration():
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        print("üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...")
        
        result = subprocess.run([
            sys.executable, '-m', 'alembic', 'upgrade', 'head'
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            print(result.stdout)
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π:")
            print(result.stderr)
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == '__main__':
    print("üóÑÔ∏è  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ DailyBot")
    print("=" * 40)
    
    if len(sys.argv) > 1:
        command = sys.argv[1]
        
        if command == 'create':
            create_initial_migration()
        elif command == 'apply':
            apply_migration()
        elif command == 'both':
            if create_initial_migration():
                apply_migration()
        else:
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
            print("  create - —Å–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é")
            print("  apply  - –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏")
            print("  both   - —Å–æ–∑–¥–∞—Ç—å –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å")
    else:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python create_migration.py [create|apply|both]")
        print("\n–î–ª—è Railway:")
        print("1. –°–æ–∑–¥–∞–π—Ç–µ PostgreSQL –±–∞–∑—É –≤ Railway")
        print("2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ DATABASE_URL –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python create_migration.py both")
