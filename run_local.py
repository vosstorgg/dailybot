#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–∞—Ö
"""
import os
import sys
import asyncio
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
load_dotenv('.env.local')

def print_banner():
    print("üöÄ DailyBot Local Development")
    print("=" * 40)
    print(f"BOT_TOKEN: {'‚úÖ Set' if os.getenv('BOT_TOKEN') else '‚ùå Not set'}")
    print(f"WEBHOOK_URL: {os.getenv('WEBHOOK_URL', 'Not set')}")
    print(f"PORT: {os.getenv('PORT', '8000')}")
    print("=" * 40)

def run_webhook_mode():
    """–ó–∞–ø—É—Å–∫ –≤ webhook —Ä–µ–∂–∏–º–µ (–Ω—É–∂–µ–Ω ngrok –∏–ª–∏ Railway)"""
    print("üîó Webhook Mode - –Ω—É–∂–µ–Ω –ø—É–±–ª–∏—á–Ω—ã–π URL")
    print("–í–∞—Ä–∏–∞–Ω—Ç—ã:")
    print("1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ngrok: ngrok http 8000")
    print("2. –î–µ–ø–ª–æ–π—Ç–µ –Ω–∞ Railway –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ URL")
    print("3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π URL —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤")
    print("")
    
    from app import create_app
    from aiohttp import web
    
    app = create_app()
    port = int(os.getenv('PORT', 8000))
    
    print(f"üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:{port}")
    print("üìç –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:")
    print(f"   GET  http://localhost:{port}/")
    print(f"   GET  http://localhost:{port}/set_webhook")
    print(f"   POST http://localhost:{port}/webhook")
    
    web.run_app(app, host='localhost', port=port)

def run_polling_mode():
    """–ó–∞–ø—É—Å–∫ –≤ polling —Ä–µ–∂–∏–º–µ (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)"""
    print("üîÑ Polling Mode - –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
    
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return
    
    # –ü—Ä–æ—Å—Ç–æ–π polling –±–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    import asyncio
    import aiohttp
    
    async def polling_bot():
        session = aiohttp.ClientSession()
        offset = 0
        
        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ polling —Ä–µ–∂–∏–º–µ...")
        print("üí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        
        try:
            while True:
                # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                url = f"https://api.telegram.org/bot{bot_token}/getUpdates"
                params = {'offset': offset, 'timeout': 30}
                
                async with session.get(url, params=params) as response:
                    data = await response.json()
                    
                    if data.get('ok') and data.get('result'):
                        for update in data['result']:
                            offset = update['update_id'] + 1
                            
                            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                            if 'message' in update:
                                message = update['message']
                                chat_id = message['chat']['id']
                                user_name = message.get('from', {}).get('first_name', 'Unknown')
                                text = message.get('text', '')
                                
                                print(f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_name}: {text}")
                                
                                # –û—Ç–≤–µ—á–∞–µ–º
                                reply_url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
                                reply_data = {
                                    'chat_id': chat_id,
                                    'text': f"Hello World! üåü\n\n–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: {text}"
                                }
                                
                                async with session.post(reply_url, json=reply_data) as reply_response:
                                    reply_result = await reply_response.json()
                                    if reply_result.get('ok'):
                                        print(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                                    else:
                                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {reply_result}")
                
                await asyncio.sleep(1)
                
        except KeyboardInterrupt:
            print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
        finally:
            await session.close()
    
    asyncio.run(polling_bot())

def main():
    print_banner()
    
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python run_local.py webhook  - –ó–∞–ø—É—Å–∫ webhook —Å–µ—Ä–≤–µ—Ä–∞")
        print("  python run_local.py polling  - –ó–∞–ø—É—Å–∫ polling –±–æ—Ç–∞")
        return
    
    mode = sys.argv[1].lower()
    
    if mode == 'webhook':
        run_webhook_mode()
    elif mode == 'polling':
        run_polling_mode()
    else:
        print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'webhook' –∏–ª–∏ 'polling'")

if __name__ == '__main__':
    main()
